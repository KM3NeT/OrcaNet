# Configuration file for network training
#
# These options define the various properties of a model. They are extracted by the function
#   read_out_config_file in
# the file
#   utilities/input_utilities.py.

# The loss(es) of the model are listed here. Every loss has an identifier as a keyword,
# and a loss function that it will use. Can also give a weight to each loss.
[losses]
dx = {function="mse", weight=10}
dy = {function="mse", weight=10}
dz = {function='mean_absolute_error', weight=15}
vx = {function='mean_absolute_error', weight=1}
vy = {function='mean_absolute_error', weight=1}
vz = {function='mean_absolute_error', weight=1}
vt = {function='mean_absolute_error', weight=1e-10}
e  = {function='mean_absolute_error'}
by = {function='mean_absolute_error', weight=10}
dx_err = {function='loss_uncertainty_mse'}
dy_err = {function='loss_uncertainty_mse'}
dz_err = {function='loss_uncertainty_mse', weight=1.25}
vx_err = {function='loss_uncertainty_mse'}
vy_err = {function='loss_uncertainty_mse'}
vz_err = {function='loss_uncertainty_mse'}
vt_err = {function='loss_uncertainty_mse', weight=1e-10}
e_err  = {function='loss_uncertainty_mse', weight=1e-2}
by_err = {function='loss_uncertainty_mse'}

[positional_arguments]
# Positional arguments of the execute_nn function in run_nn.py
# TODO add doc for these options
class_type = ['None', 'energy_dir_bjorken-y_vtx_errors']
nn_arch = 'VGG'
mode = 'train'
swap_4d_channels = 'xyz-t_and_xyz-c_single_input'

[keyword_arguments]
# Keyword arguments of the execute_nn function in run_nn.py
str_ident = 'lp_tight-1_60b_errors_mse_w_vtx'
n_gpu = ['1', 'avolkov']
zero_center = true
#n_events = 10000
#train_logger_display=500
#train_logger_flush=1
